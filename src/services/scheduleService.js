import { apiService } from './apiService';
import { API_ENDPOINTS } from '../config/api';

class ScheduleService {
  /**
   * L·∫•y l·ªãch h·ªçc c·ªßa sinh vi√™n
   * @returns {Promise<Object>} L·ªãch h·ªçc c·ªßa sinh vi√™n
   */
  async getMySchedule() {
    try {
      const response = await apiService.get(API_ENDPOINTS.MY_SCHEDULE);
      const rawData = response.schedule || [];
  
      const normalizedData = rawData.map((item, index) => {
        // ∆Øu ti√™n d·ªØ li·ªáu trong item.schedule (n·∫øu c√≥)
        const schedule = item.schedule || {};
  
        return {
          courseClassId: item.courseClassId || `UNKNOWN-${index}`,
          courseCode: item.courseCode || 'N/A',
          courseName: item.courseName || 'Ch∆∞a r√µ t√™n m√¥n h·ªçc',
          subject: item.subject || 'Ch∆∞a r√µ m√¥n h·ªçc',
          credits: item.credits ?? 0,
          room: item.room || 'Ch∆∞a c√≥ ph√≤ng',
          teacher: item.teacher || 'Ch∆∞a c√≥ gi·∫£ng vi√™n',
  
          // G·ªôp l·∫°i t·ª´ c·∫£ 2 ngu·ªìn: item v√† item.schedule
          dayOfWeek: schedule.dayOfWeek || item.dayOfWeek || 'monday',
          startTime: schedule.startTime || item.startTime || '07:00',
          endTime: schedule.endTime || item.endTime || '09:00',
          datetime: schedule.datetime || item.schedule_datetime || null,
        };
      });
  
      return {
        success: true,
        data: normalizedData,
      };
    } catch (error) {
      console.error('Get my schedule error:', error);
      return {
        success: false,
        message: error.message || 'C√≥ l·ªói x·∫£y ra khi l·∫•y l·ªãch h·ªçc',
        data: [],
      };
    }
  }  

  /**
   * L·∫•y danh s√°ch ƒëƒÉng k√Ω c·ªßa sinh vi√™n
   */
  /**
 * L·∫•y danh s√°ch ƒëƒÉng k√Ω c·ªßa sinh vi√™n
 */
  async getMyRegistrations() {
    try {
      const response = await apiService.get(API_ENDPOINTS.MY_REGISTRATIONS);
      const rawData = response.registrations || [];

      // üîπ Chu·∫©n h√≥a d·ªØ li·ªáu ƒë·ªÉ t∆∞∆°ng th√≠ch v·ªõi SchedulePage.jsx
      const normalizedData = rawData.map((item, index) => ({
        registrationId: item.registrationId || `REG-${index}`,
        status: item.status || 'registered',
        registrationDate: item.registrationDate || 'N/A',
        grade: item.grade ?? null,

        // M√¥ ph·ªèng l·∫°i c·∫•u tr√∫c m√† UI ƒëang mong ƒë·ª£i
        courseClass: {
          courseClassId: item.courseClassId || 'UNKNOWN',
          courseCode: item.courseCode || 'N/A',
          courseName: item.courseName || 'Ch∆∞a r√µ t√™n m√¥n h·ªçc',
          subject: item.subject || 'Ch∆∞a r√µ m√¥n h·ªçc',
          credits: item.credits ?? 0,
        },
        semester: {
          semesterName: item.semester || 'Ch∆∞a r√µ h·ªçc k·ª≥',
        },
      }));

      return {
        success: true,
        data: normalizedData,
      };
    } catch (error) {
      console.error('Get my registrations error:', error);
      return {
        success: false,
        message: error.message || 'C√≥ l·ªói x·∫£y ra khi l·∫•y danh s√°ch ƒëƒÉng k√Ω',
        data: [],
      };
    }
  }
}

export const scheduleService = new ScheduleService();
